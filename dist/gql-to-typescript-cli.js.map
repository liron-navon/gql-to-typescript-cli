{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/consoleUtils.ts","webpack:///./src/index.ts","webpack:///external \"commander\"","webpack:///external \"fs\"","webpack:///external \"gql-to-typescript\"","webpack:///external \"path\""],"names":[],"mappings":"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","file":"gql-to-typescript-cli.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","export const consoleFlags = {\n    error: '\\x1b[31m', // adds red color to terminal output\n    warning: '\\x1b[33m', // adds yellow color to terminal output\n    info: '\\x1b[36m', // adds cyan color to terminal output\n    emphasis: '\\x1b[32m', // adds green color to terminal output\n    underscore: '\\x1b[4m', // adds underscore to terminal output\n    reset: '\\x1b[0m' // reset terminal output\n};\n","import {convertFiles} from 'gql-to-typescript';\nimport {consoleFlags} from './consoleUtils';\nimport * as fs from 'fs';\nimport * as program from 'commander';\nimport * as path from 'path';\n\nconst pkg = require('../package.json');\n\nconst defaultConfigFile = '.gql-to-typescript.config.json';\nconst defaultConfig = {\n    'glob': './**/*.ts',\n    'scalars': {},\n    'ignoreFields': [\n        '_empty'\n    ],\n    'ignoreTypes': [],\n    'namespace': 'GraphqlTypes',\n    'outputFile': './GraphqlTypes.ts'\n};\n\nprogram\n    .version(pkg.version)\n    .description(pkg.description);\n\nprogram\n    .command('init')\n    .description('initiates a config file')\n    .option('-o, --output [value]', 'where to put the config file', `${defaultConfigFile}`)\n    .action((cmd) => {\n        const filePath = path.join(cmd.output);\n        // write data to the file\n        const content = JSON.stringify(defaultConfig, null, 2);\n        fs.writeFileSync(filePath, content);\n\n        console.info(\n            consoleFlags.info,\n            `Created a configuration file at:`,\n            consoleFlags.underscore,\n            filePath\n        );\n    });\n\nprogram\n    .command('convert')\n    .description('convert files with gql tags to typescript definition')\n    .option('-g, --glob [value]', 'a glob for selecting files')\n    .option('-c, --config [value]', 'a path to a config file', `${defaultConfigFile}`)\n    .option('-o, --outputFile [value]', 'the generated types will go here')\n    .option('-ns, --namespace [value]', 'a namespace for the types', 'GQLTypes')\n    .option('-s, --scalars [value]', 'scalar types, as a json string (object)', '{}')\n    .option('-it, --ignoreTypes [value]', 'types to ignore, as a json string (array)', '[\"_empty\"]')\n    .option('-if, --ignoreFields [value]', 'fields to ignore, as a json string (array)', '[]')\n    .action((cmd) => {\n        const cmdCopy = {...cmd};\n        const {config} = cmdCopy;\n\n        try {\n            const configContent = fs.readFileSync(config, 'utf8');\n            const parsedConfig = JSON.parse(configContent);\n            Object.assign(cmdCopy, parsedConfig);\n        } catch (e) {\n            console.info(\n                consoleFlags.info,\n                `No config file was found, you can create one by running:`,\n                consoleFlags.emphasis,\n                `${cmd.parent._name} init`\n            );\n        }\n\n        if (!cmdCopy.glob || !cmdCopy.outputFile) {\n            console.error(\n                consoleFlags.error,\n                'You must specify at least a',\n                consoleFlags.underscore,\n                'glob',\n                consoleFlags.reset,\n                consoleFlags.error,\n                'and an',\n                consoleFlags.underscore,\n                'outputFile'\n            );\n            return;\n        }\n\n        const {glob, outputFile, namespace, scalars, ignoreTypes, ignoreFields} = cmdCopy;\n\n        const options: any = {\n            outputFile\n        };\n        if (namespace) {\n            options.namespace = namespace;\n        }\n        if (ignoreTypes) {\n            options.ignoreTypes = typeof ignoreTypes === 'string' ? JSON.parse(ignoreTypes) : ignoreTypes;\n        }\n        if (ignoreFields) {\n            options.ignoreFields = typeof ignoreFields === 'string' ? JSON.parse(ignoreFields) : ignoreFields;\n        }\n        if (scalars) {\n            options.scalars = typeof scalars === 'string' ? JSON.parse(scalars) : scalars;\n        }\n\n        // it will log a message after the conversion\n        convertFiles(glob, options);\n    });\n\nprogram.parse(process.argv);\n","module.exports = require(\"commander\");","module.exports = require(\"fs\");","module.exports = require(\"gql-to-typescript\");","module.exports = require(\"path\");"],"sourceRoot":""}